# frozen_string_literal: true

class CookieUtils
  #
  # Converts a cookie string to a Netscape HTTP Cookie File format.
  #
  # Example:
  # cookie_string_to_netscape_file("sessionid=abc123; user=john_doe; theme=dark", ".example.com", "cookies.txt")
  #
  # @param [String] cookie_string Cookie string
  # @param [String] domain Domain for the cookies. Should start with a period `.`.
  # @param [String] output_file Output file path. Default is "cookies.txt".
  # @return [void]
  def self.cookie_string_to_netscape_file(cookie_string, domain, output_file)
    # Current time in seconds since epoch for expiry calculation
    current_time = Time.now.to_i

    # Default expiry time (1 year from now)
    default_expiry = current_time + 31_536_000

    # Parse the cookie string
    cookies = {}
    cookie_string.split("; ").each do |cookie_part|
      name, value = cookie_part.split("=", 2)
      cookies[name] = value
    end

    # Open the output file
    File.open(output_file, "w") do |file|
      # Write the header
      file.puts("# Netscape HTTP Cookie File")
      file.puts("# https://curl.se/docs/http-cookies.html")
      file.puts("# This file was generated by a Ruby script")
      file.puts("")

      # Write each cookie
      cookies.each do |name, value|
        # Format: domain, subdomain_flag, path, secure_flag, expiry, name, value
        # Example: .example.com TRUE / FALSE 1732569250 cookieName cookieValue

        # Default values
        subdomain_flag = "TRUE"
        path = "/"
        secure_flag = "FALSE"
        expiry = default_expiry

        file.puts("#{domain}\t#{subdomain_flag}\t#{path}\t#{secure_flag}\t#{expiry}\t#{name}\t#{value}")
      end
    end
  end
end
